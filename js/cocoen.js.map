{
  "version": 3,
  "sources": ["../src/index.ts", "../src/config.ts", "../src/utils/calculate-element-width.ts", "../src/utils/calculate-open-ratio.ts", "../src/utils/calculate-x-from-event.ts", "../src/utils/debounce.ts", "../src/utils/format-percentage-as-string.ts", "../src/components/cocoen.ts", "../src/create.ts", "../src/parse.ts"],
  "sourcesContent": ["import './components/cocoen';\n\nimport { create } from './create';\nimport { parse } from './parse';\n\nexport { create, parse };\n", "export const name = 'cocoen';\nexport const componentName = `${name}-component`;\n", "export const calculateElementWidth = (element: HTMLElement): number =>\n  Number.parseInt(window.getComputedStyle(element).width, 10);\n", "type CalculateOpenRatioPayload = {\n  x: number;\n  dragElementWidth: number;\n  hostElementWidth: number;\n};\nexport const calculateOpenRatio = ({\n  dragElementWidth,\n  hostElementWidth,\n  x,\n}: CalculateOpenRatioPayload): number => {\n  let value = x;\n  if (x < 0) {\n    value = dragElementWidth;\n  } else if (x >= hostElementWidth) {\n    value = hostElementWidth - dragElementWidth;\n  }\n\n  let ratio = value + dragElementWidth / 2;\n  ratio /= hostElementWidth;\n  return ratio * 100;\n};\n", "export const calculateXfromEvent = (\n  event: MouseEvent | TouchEvent,\n  offsetElement?: HTMLElement,\n): number => {\n  let clientX = 0;\n  if (event instanceof MouseEvent) {\n    clientX = event.clientX;\n  } else if (event instanceof TouchEvent) {\n    clientX = event.touches[0].clientX;\n  }\n\n  const offsetLeft = offsetElement?.getBoundingClientRect().left || 0;\n  return clientX - offsetLeft;\n};\n", "/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable eslint-comments/no-duplicate-disable */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const debounce = <T extends (...args: any[]) => any>(\n  callback: T,\n  waitFor: number,\n) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  return (...args: Parameters<T>): ReturnType<T> => {\n    let result: any;\n    timeout && clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      result = callback(...args);\n    }, waitFor);\n    return result;\n  };\n};\n", "export const formatPercentageAsString = (percentage: number): string =>\n  `${percentage}%`;\n", "import { componentName } from '../config';\nimport { calculateElementWidth } from '../utils/calculate-element-width';\nimport { calculateOpenRatio } from '../utils/calculate-open-ratio';\nimport { calculateXfromEvent } from '../utils/calculate-x-from-event';\nimport { debounce } from '../utils/debounce';\nimport { formatPercentageAsString } from '../utils/format-percentage-as-string';\n\ntype CustomEventPayload = {\n  bubbles: boolean;\n  composed: boolean;\n  detail: {\n    elementWidth: number;\n    openRatio: number;\n    isRendered: boolean;\n    isVisible: boolean;\n  };\n};\n\nconst css = `\n  :host {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    cursor: pointer;\n    display: block;\n    overflow: hidden;\n    position: relative;\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -khtml-user-select: none;\n    -ms-user-select: none;\n  }\n\n  :host *,\n  :host *:after,\n  :host *:before {\n    box-sizing: inherit;\n    -moz-box-sizing: inherit;\n    -webkit-box-sizing: inherit;\n  }\n\n  #before {\n    height: 100%;\n    left: 0;\n    overflow: hidden;\n    position: absolute;\n    top: 0;\n    width: 50%;\n  }\n\n  #drag {\n    background: var(--color, #fff);\n    bottom: 0;\n    cursor: ew-resize;\n    left: 50%;\n    margin-left: -1px;\n    position: absolute;\n    top: 0;\n    width: 2px;\n  }\n\n  #drag:before {\n    border: 3px solid var(--color, #fff);\n    content: '';\n    height: 30px;\n    left: 50%;\n    margin-left: -7px;\n    margin-top: -15px;\n    position: absolute;\n    top: 50%;\n    width: 14px;\n  }\n\n  ::slotted(img) {\n    max-height: 100%;\n    object-fit: contain;\n    pointer-events: none;\n  }\n\n  ::slotted(img[slot=before]) {\n    max-width: none;\n  }\n\n  ::slotted(img[slot=after]) {\n    display: block;\n    max-width: 100%;\n    width: 100%;\n  }\n`;\n\nexport class Cocoen extends HTMLElement {\n  private drag: HTMLElement | null;\n\n  private intersectionObserver: IntersectionObserver;\n\n  private shadowDOM: ShadowRoot;\n\n  private debouncedUpdateDimensions: () => void;\n\n  private onClickHandler: (event: MouseEvent) => void;\n\n  private onContextMenuHandler: () => void;\n\n  private onDragEndHandler: (event: MouseEvent | TouchEvent) => void;\n\n  private onDragHandler: (event: MouseEvent | TouchEvent) => void;\n\n  private onDragStartHandler: (event: MouseEvent | TouchEvent) => void;\n\n  private onIntersectionHandler: IntersectionObserverCallback;\n\n  private animateToValue = 0;\n\n  private colorValue = '#fff';\n\n  private dragElementWidthValue = 0;\n\n  private elementWidthValue = 0;\n\n  private isDraggingValue = false;\n\n  private openRatioValue = 50;\n\n  private isRenderedValue = false;\n\n  private isVisibleValue = false;\n\n  private xValue = 0;\n\n  constructor() {\n    super();\n\n    this.drag = null;\n    this.shadowDOM = this.attachShadow({ mode: 'open' });\n\n    this.onDragStartHandler = () => this.onDragStart();\n\n    this.onDragEndHandler = () => this.onDragEnd();\n    this.onDragHandler = (event: MouseEvent | TouchEvent) => this.onDrag(event);\n    this.onClickHandler = (event: MouseEvent) => this.onClick(event);\n    this.onContextMenuHandler = () => this.onContextMenu();\n    this.onIntersectionHandler = (\n      entries: IntersectionObserverEntry[],\n      observer: IntersectionObserver,\n    ) => this.onIntersection(entries, observer);\n\n    this.debouncedUpdateDimensions = debounce(() => {\n      this.updateDimensions();\n    }, 250);\n\n    this.intersectionObserver = new IntersectionObserver(\n      this.onIntersectionHandler,\n      {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0,\n      },\n    );\n  }\n\n  get x(): number {\n    return this.xValue;\n  }\n\n  set x(value: number) {\n    this.xValue = value;\n\n    window.requestAnimationFrame(() => {\n      this.openRatio = calculateOpenRatio({\n        x: this.xValue,\n        dragElementWidth: this.dragElementWidth,\n        hostElementWidth: this.elementWidth,\n      });\n    });\n  }\n\n  get elementWidth(): number {\n    return this.elementWidthValue;\n  }\n\n  set elementWidth(value: number) {\n    this.elementWidthValue = value;\n  }\n\n  get dragElementWidth(): number {\n    return this.dragElementWidthValue;\n  }\n\n  set dragElementWidth(value: number) {\n    this.dragElementWidthValue = value;\n  }\n\n  get isDragging(): boolean {\n    return this.isDraggingValue;\n  }\n\n  set isDragging(value: boolean) {\n    this.isDraggingValue = value;\n  }\n\n  get openRatio(): number {\n    return this.openRatioValue;\n  }\n\n  set openRatio(value: number) {\n    this.openRatioValue = value;\n\n    window.requestAnimationFrame(() => {\n      this.updateStyles();\n    });\n  }\n\n  get color(): string {\n    return this.colorValue;\n  }\n\n  set color(value: string) {\n    this.colorValue = value;\n\n    window.requestAnimationFrame(() => {\n      this.style.setProperty('--color', this.color);\n    });\n  }\n\n  get isVisible(): boolean {\n    return this.isVisibleValue;\n  }\n\n  set isVisible(value: boolean) {\n    this.isVisibleValue = value;\n  }\n\n  get isRendered(): boolean {\n    return this.isRenderedValue;\n  }\n\n  set isRendered(value: boolean) {\n    this.isRenderedValue = value;\n  }\n\n  get animateTo(): number {\n    return this.animateToValue;\n  }\n\n  set animateTo(value: number) {\n    this.animateToValue = value;\n  }\n\n  static get observedAttributes(): Array<string> {\n    return ['start', 'color'];\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string,\n  ): void {\n    if (oldValue === newValue) {\n      return;\n    }\n\n    if (name === 'start') {\n      this.animateTo = Number.parseInt(String(this.getAttribute('start')), 10);\n      if (this.isVisible) {\n        this.openRatio = this.animateTo;\n      }\n    }\n\n    if (name === 'color') {\n      this.color = String(this.getAttribute('color'));\n    }\n  }\n\n  connectedCallback(): void {\n    if (this.isRendered) {\n      return;\n    }\n\n    this.render();\n    this.isRendered = true;\n\n    this.dispatchEvent(\n      new CustomEvent(`${componentName}:connected`, this.customEventPayload()),\n    );\n\n    this.drag = this.shadowDOM.querySelector('#drag');\n\n    this.updateDimensions();\n\n    this.addEventListener('mousedown', this.onDragStartHandler, {\n      passive: true,\n    });\n    this.addEventListener('touchstart', this.onDragStartHandler, {\n      passive: true,\n    });\n    this.addEventListener('mousemove', this.onDragHandler, { passive: true });\n    this.addEventListener('touchmove', this.onDragHandler, { passive: true });\n    this.addEventListener('click', this.onClickHandler, { passive: true });\n    this.addEventListener('contextmenu', this.onContextMenuHandler, {\n      passive: true,\n    });\n\n    window.addEventListener('resize', this.debouncedUpdateDimensions, {\n      passive: true,\n    });\n    window.addEventListener('mouseup', this.onDragEndHandler, {\n      passive: true,\n    });\n    window.addEventListener('touchend', this.onDragEndHandler, {\n      passive: true,\n    });\n\n    this.intersectionObserver.observe(this);\n  }\n\n  disconnectedCallback(): void {\n    this.dispatchEvent(\n      new CustomEvent(\n        `${componentName}:disconnected`,\n        this.customEventPayload(),\n      ),\n    );\n\n    this.removeEventListener('mousedown', this.onDragStartHandler);\n    this.removeEventListener('touchstart', this.onDragStartHandler);\n    this.removeEventListener('mousemove', this.onDragHandler);\n    this.removeEventListener('touchmove', this.onDragHandler);\n    this.removeEventListener('click', this.onClickHandler);\n    this.removeEventListener('contextmenu', this.onContextMenuHandler);\n\n    window.removeEventListener('resize', this.debouncedUpdateDimensions);\n    window.removeEventListener('mouseup', this.onDragEndHandler);\n    window.removeEventListener('touchend', this.onDragEndHandler);\n\n    this.intersectionObserver.unobserve(this);\n  }\n\n  render(): void {\n    this.shadowDOM.innerHTML = `\n      <style>${css}</style>\n      <div id=\"before\">\n        <slot name=\"before\"></slot>\n      </div>\n      <slot name=\"after\"></slot>\n      <div id=\"drag\" part=\"drag\"></div>\n    `;\n  }\n\n  updateDimensions(): void {\n    this.elementWidth = calculateElementWidth(this);\n\n    if (this.drag) {\n      this.dragElementWidth = calculateElementWidth(this.drag);\n    }\n\n    this.dispatchEvent(\n      new CustomEvent(`${componentName}:resized`, this.customEventPayload()),\n    );\n  }\n\n  updateStyles(): void {\n    const before = this.shadowDOM.querySelector('#before') as HTMLElement;\n    const drag = this.shadowDOM.querySelector('#drag') as HTMLElement;\n    const openRatio = formatPercentageAsString(this.openRatio);\n\n    if (this.animateTo) {\n      before.style.transition = 'width .75s';\n      drag.style.transition = 'left .75s';\n    } else {\n      before.style.transition = 'none';\n      drag.style.transition = 'none';\n    }\n\n    before.style.width = openRatio;\n    drag.style.left = openRatio;\n\n    this.dispatchEvent(\n      new CustomEvent(`${componentName}:updated`, this.customEventPayload()),\n    );\n  }\n\n  onDragStart(): void {\n    this.animateTo = 0;\n    this.isDragging = true;\n  }\n\n  onDrag(event: MouseEvent | TouchEvent): void {\n    if (!this.isDragging) {\n      return;\n    }\n\n    this.x = calculateXfromEvent(event, this);\n  }\n\n  onDragEnd(): void {\n    this.isDragging = false;\n  }\n\n  onClick(event: MouseEvent): void {\n    this.animateTo = 0;\n    this.x = calculateXfromEvent(event, this);\n  }\n\n  onContextMenu(): void {\n    this.isDragging = false;\n  }\n\n  onIntersection(\n    entries: IntersectionObserverEntry[],\n    observer: IntersectionObserver,\n  ): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry.isIntersecting) {\n        this.dispatchEvent(\n          new CustomEvent(\n            `${componentName}:visible`,\n            this.customEventPayload(),\n          ),\n        );\n        if (this.animateTo) {\n          this.openRatio = this.animateTo;\n        }\n        this.isVisible = true;\n        observer.unobserve(this);\n      }\n    });\n  }\n\n  customEventPayload(): CustomEventPayload {\n    return {\n      bubbles: true,\n      composed: true,\n      detail: {\n        elementWidth: this.elementWidth,\n        openRatio: this.openRatio,\n        isRendered: this.isRendered,\n        isVisible: this.isVisible,\n      },\n    };\n  }\n}\n\n// Define our custom Cocoen web component\ncustomElements.define(componentName, Cocoen);\n", "import type { Cocoen } from './components/cocoen';\nimport { componentName } from './config';\n\ntype Options = {\n  start?: number;\n  color?: string;\n};\n\nexport const create = (element: HTMLElement, options?: Options): Cocoen => {\n  const component = document.createElement(componentName) as Cocoen;\n  const before = element.querySelectorAll('img')[0];\n  const after = element.querySelectorAll('img')[1];\n\n  if (!before || !after) {\n    throw new Error('Cocoen needs two images');\n  }\n\n  before.setAttribute('slot', 'before');\n  after.setAttribute('slot', 'after');\n  component.append(before.cloneNode(true));\n  component.append(after.cloneNode(true));\n\n  Object.keys(element.dataset).forEach((key: string) =>\n    component.setAttribute(key, String(element.dataset[key])),\n  );\n\n  if (options?.start) {\n    component.setAttribute('start', String(options.start));\n  }\n\n  if (options?.color) {\n    component.setAttribute('color', options.color);\n  }\n\n  element.replaceWith(component);\n\n  return component;\n};\n", "import { name } from './config';\nimport { create } from './create';\n\nexport const parse = (context: HTMLElement): void => {\n  const elements = [...context.querySelectorAll<HTMLElement>(`.${name}`)];\n  elements.map((element) => create(element));\n};\n"],
  "mappings": "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",
  "names": []
}
